[workspace]
resolver = "2"
members = [
    "app",
    "crates/*",
    "tools/*",
]

[workspace.package]
authors = ["SK83RJOSH"]
edition = "2021"
homepage = "https://github.com/SK83RJOSH/rust-jc2-tools/"
license = "MIT OR Apache-2.0"
repository = "https://github.com/SK83RJOSH/rust-jc2-tools/"
rust-version = "1.77"
version = "0.1.0"

[workspace.dependencies]
bevy_jc2_file_system = { path = "crates/bevy_jc2_file_system", version = "0.1.0", default-features = false }
bevy_jc2_render_block = { path = "crates/bevy_jc2_render_block", version = "0.1.0", default-features = false }
jc2_file_formats = { path = "crates/jc2_file_formats", version = "0.1.0", default-features = false }
jc2_hashing = { path = "crates/jc2_hashing", version = "0.1.0", default-features = false }

anyhow = "1.0"
async-fs = "2.1"
async-io = "2.3"
async-lock = "3.3"
bevy = { version = "0.14", default-features = false }
bevy_egui = "0.28"
bevy_file_dialog = "0.6.0"
bevy_panorbit_camera = { version = "0.19", features = ["bevy_egui"] }
bevy_save = { git = "https://github.com/perry-blueberry/bevy_save", branch = "update-to-bevy-0.14", default-features = false }
# bevy_save = { version = "0.14", default-features = false }
bevy-inspector-egui = { version = "0.25" }
binrw = "0.14"
bitflags = { version = "2.4", features = ["bytemuck"] }
bytemuck = { version = "1.14", features = ["must_cast"] }
clap = { version = "4.4", features = ["derive"] }
const_for = "0.1"
flate2 = "1.0"
futures-io = "0.3"
futures-lite = "2.0"
gltf = { git = "https://github.com/gltf-rs/gltf.git", rev = "dd6f483" }
gltf-json = { git = "https://github.com/gltf-rs/gltf.git", rev = "dd6f483" }
image = { version = "0.25", default-features = false }
itertools = "0.12"
lexical-sort = "0.3"
num-traits = "0.2"
parking_lot = { version = "0.12", features = ["arc_lock", "send_guard"] }
paste = "1.0"
rgb = "0.8"
static_assertions = "1.1"
texpresso = "2.0"
thiserror = "1.0"

[profile.release]
codegen-units = 1
lto = true
opt-level = "z"
panic = "abort"

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 3

[workspace.lints.rust]
unsafe_code = "deny"

future_incompatible = "warn"
nonstandard_style = "warn"
rust_2018_idioms = "warn"
rust_2021_prelude_collisions = "warn"
semicolon_in_expressions_from_macros = "warn"
trivial_numeric_casts = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"

# https://github.com/rust-lang/cargo/issues/13157
elided_lifetimes_in_paths = "allow" # Allowed for bevy systems
trivial_casts = "allow" # Allowed since coercions cannot often be inferred (such as Box<Reader>)

[workspace.lints.clippy]
as_ptr_cast_mut = "warn"
await_holding_lock = "warn"
bool_to_int_with_if = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
derive_partial_eq_without_eq = "warn"
disallowed_macros = "warn"
disallowed_methods = "warn"
disallowed_names = "warn" 
disallowed_script_idents = "warn"
disallowed_types = "warn" 
doc_link_with_quotes = "warn"
doc_markdown = "warn"
empty_enum = "warn"
equatable_if_let = "warn"
exit = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
fn_to_numeric_cast_any = "warn"
from_iter_instead_of_collect = "warn"
get_unwrap = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
index_refutable_slice = "warn"
inefficient_to_string = "warn"
infinite_loop = "warn"
into_iter_without_iter = "warn"
invalid_upcast_comparisons = "warn"
iter_not_returning_iterator = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_without_into_iter = "warn"
large_digit_groups = "warn"
large_include_file = "warn"
large_stack_arrays = "warn"
large_stack_frames = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_assert = "warn"
manual_clamp = "warn"
manual_instant_elapsed = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
map_err_ignore = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_on_vec_items = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
mismatched_target_os = "warn"
mismatching_type_param_order = "warn"
missing_enforced_import_renames = "warn"
missing_safety_doc = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
negative_feature_names = "warn"
nonstandard_macro_braces = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
pub_without_shorthand = "warn"
rc_mutex = "warn"
readonly_write_lock = "warn"
redundant_type_annotations = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
should_panic_without_expect = "warn"
significant_drop_tightening = "warn"
single_match_else = "warn"
str_to_string = "warn"
string_add = "warn"
string_add_assign = "warn"
string_lit_as_bytes = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
suspicious_command_arg_space = "warn"
suspicious_xor_used_as_pow = "warn"
todo = "warn"
too_many_lines = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
tuple_array_conversions = "warn"
unchecked_duration_subtraction = "warn"
undocumented_unsafe_blocks = "warn"
unimplemented = "warn"
uninhabited_references = "warn"
uninlined_format_args = "warn"
unnecessary_box_returns = "warn"
unnecessary_safety_doc = "warn"
unnecessary_struct_initialization = "warn"
unnecessary_wraps = "warn"
unnested_or_patterns = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
unused_self = "warn"
unwrap_used = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
wildcard_dependencies = "warn"
wildcard_imports = "warn"
zero_sized_map_values = "warn"

# https://github.com/rust-lang/cargo/issues/13157
enum_glob_use = "allow" # Allowed for compact match syntax
needless_pass_by_value = "allow" # Allowed for bevy systems
